parameters:
  configurations:
    []
    # - name: name
    #   services: [ service1, service2 ]

stages:
  - stage: commit
    displayName: Commit

    jobs:
      - ${{ each configuration in parameters.configurations }}:
          - job: build_${{ configuration.name }}
            displayName: Build ${{ configuration.name }}

            ${{ if eq(configuration.name, 'linux') }}:
              pool:
                vmImage: ubuntu-16.04

            ${{ if eq(configuration.name, 'windows') }}:
              pool:
                vmImage: windows-2019

            # pool:
            #   name: Default
            #   demands:
            #     - AZP_AGENT_DOCKER_${{ configuration.name }}

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - script: |
                  docker version
                  docker-compose version
                  docker container ls -a
                  docker image ls -a
                displayName: Initialize Docker

              - ${{ each service in configuration.services }}:
                  - script: |
                      docker-compose build ${{ service }}
                    displayName: Build ${{ service }}

                  - script: |
                      docker-compose run ${{ service }}
                    displayName: Test ${{ service }}

              - task: Docker@2
                displayName: Login Docker
                inputs:
                  command: login
                  containerRegistry: dockerhub-gusztavvargadr

              - ${{ each service in configuration.services }}:
                  - script: |
                      docker-compose push ${{ service }}
                    displayName: Publish ${{ service }}

              - task: Docker@2
                displayName: Logout Docker
                condition: always()
                inputs:
                  command: logout
                  containerRegistry: dockerhub-gusztavvargadr

              - script: |
                  docker-compose down --rmi all
                displayName: Clean
                condition: always()
