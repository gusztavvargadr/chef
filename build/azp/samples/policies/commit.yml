parameters:
  options:
    []
    # - name: name

stages:
  - stage: commit
    displayName: Commit

    jobs:
      - ${{ each option in parameters.options }}:
          - job: build_${{ option.name }}_chef
            displayName: Build ${{ option.name }} Chef

            pool:
              vmImage: ubuntu-16.04

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - script: |
                  docker --version
                  docker-compose --version

                  docker container ls -a
                  docker image ls -a
                displayName: Initialize Docker

              - script: |
                  docker-compose pull --quiet chef-workstation-linux

                  docker-compose run --rm --entrypoint "sh ./build/docker/chef.policy.export.sh" chef-workstation-linux ${{ option.name }}
                displayName: Build

              - publish: $(Build.SourcesDirectory)/.chef/
                artifact: build-${{ option.name }}-chef
                displayName: Publish Artifacts
                condition: always()

          - job: build_${{ option.name }}_chocolatey
            displayName: Build ${{ option.name }} Chocolatey
            dependsOn: build_${{ option.name }}_chef

            pool:
              name: Default
              demands:
                - AZP_AGENT_DOCKER_WINDOWS

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: build-${{ option.name }}-chef
                  path: $(Build.SourcesDirectory)/.chef/
                displayName: Download Artifacts

              - script: |
                  set DOCKER_CONTEXT=%AZP_AGENT_DOCKER_WINDOWS%

                  docker --version
                  docker-compose --version

                  docker container ls -a
                  docker image ls -a
                displayName: Initialize Docker

              - script: |
                  set DOCKER_CONTEXT=%AZP_AGENT_DOCKER_WINDOWS%

                  docker-compose pull --quiet chocolatey-cli-windows

                  docker-compose run --rm --entrypoint "powershell -File ./build/docker/chocolatey.package.pack.ps1" chocolatey-cli-windows ${{ option.name }}
                displayName: Build

              - publish: $(Build.SourcesDirectory)/.chocolatey/
                artifact: build-${{ option.name }}-chocolatey
                displayName: Publish Artifacts
                condition: always()
