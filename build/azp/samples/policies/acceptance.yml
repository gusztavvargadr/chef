parameters:
  options: []
    # - directory: directory-name
    #   policy: policy-name

stages:
  - stage: acceptance
    displayName: Acceptance

    jobs:
      - ${{ each option in parameters.options }}:
        - job: test_${{ option.directory }}_${{ option.policy }}_chef
          displayName: Test ${{ option.directory }} ${{ option.policy }} Chef

          pool:
            vmImage: windows-2019

          workspace:
            clean: all

          steps:
            - checkout: self
              submodules: recursive

            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: build-${{ option.directory }}-${{ option.policy }}-chef
                path: $(Build.SourcesDirectory)/.chef/
              displayName: Artifacts Chef Download

            - script: |
                docker version
                docker-compose version
              displayName: Docker Init

            - script: |
                docker-compose pull --quiet chocolatey-cli-windows-ltsc2019
                docker-compose pull --quiet chef-client-windows-ltsc2019
              displayName: Docker Restore

            - script: |
                docker-compose run --workdir C:/opt/chef/.chef/policies/${{ option.directory }}/${{ option.policy }}/ chef-client-windows-ltsc2019 -z
              displayName: Docker Test

            - script: |
                docker-compose down --rmi all
              displayName: Docker Clean
              condition: always()

        - job: test_${{ option.directory }}_${{ option.policy }}_chocolatey
          displayName: Test ${{ option.directory }} ${{ option.policy }} Chocolatey
          dependsOn: test_${{ option.directory }}_${{ option.policy }}_chef

          pool:
            vmImage: windows-2019

          workspace:
            clean: all

          steps:
            - checkout: self
              submodules: recursive

            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: build-${{ option.directory }}-${{ option.policy }}-chocolatey
                path: $(Build.SourcesDirectory)/.chocolatey/
              displayName: Artifacts Chocolatey Download

            - script: |
                docker version
                docker-compose version
              displayName: Docker Init

            - script: |
                docker-compose pull --quiet chocolatey-cli-windows-ltsc2019
                docker-compose pull --quiet chef-client-windows-ltsc2019
              displayName: Docker Restore

            - script: |
                docker-compose run --entrypoint choco chef-client-windows-ltsc2019 install chef-policy --confirm --source ./.chocolatey/packages/
              displayName: Docker Test

            - script: |
                docker-compose down --rmi all
              displayName: Docker Clean
              condition: always()
