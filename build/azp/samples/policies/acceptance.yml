parameters:
  options: []
    # - directory: folder-name
    #   policy: policy-name

stages:
  - stage: acceptance
    displayName: Acceptance

    jobs:
      - ${{ each option in parameters.options }}:
        - job: test_${{ option.directory }}_${{ option.policy }}
          displayName: Test ${{ option.directory }} ${{ option.policy }}

          pool:
            vmImage: windows-2019

          workspace:
            clean: all

          steps:
            - checkout: self
              submodules: recursive

            # - script: |
            #     docker version
            #     docker-compose version
            #   displayName: Init

            - script: |
                choco --version
              displayName: Init

            - download: current
              artifact: policy_${{ option.directory }}_${{ option.policy }}
              displayName: Restore - Artifacts - Download

            - task: CopyFiles@2
              inputs:
                sourceFolder: $(Pipeline.Workspace)/policy_${{ option.directory }}_${{ option.policy }}
                contents: '**'
                targetFolder: .chef
              displayName: Restore - Artifacts - Copy

            # - script: |
            #     docker-compose build chef-client-windows
            #   displayName: Restore - Chef

            - script: |
                choco install --confirm chef-client
              displayName: Restore - Chef

            # - script: |
            #     docker-compose run --workdir /opt/gusztavvargadr/chef/.chef/policies/${{ option.directory }}/${{ option.policy }} chef-client-windows -z
            #   displayName: Test

            - script: |
                cd .chef/policies/${{ option.directory }}/${{ option.policy }}
                C:/opscode/chef/bin/chef-client.bat -z
              displayName: Test

            # - script: |
            #     docker-compose down
            #   displayName: Clean
            #   condition: always()
