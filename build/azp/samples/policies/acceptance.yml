parameters:
  options:
    []
    # - name: name

stages:
  - stage: acceptance
    displayName: Acceptance

    jobs:
      - ${{ each option in parameters.options }}:
          - job: test_${{ option.name }}_chef
            displayName: Test ${{ option.name }} Chef

            pool:
              name: Default
              demands:
                - AZP_AGENT_DOCKER_WINDOWS

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: build-${{ option.name }}-chef
                  path: $(Build.SourcesDirectory)/.chef/
                displayName: Download Artifacts

              - script: |
                  set DOCKER_CONTEXT=%AZP_AGENT_DOCKER_WINDOWS%

                  docker --version
                  docker-compose --version

                  docker container ls -a
                  docker image ls -a
                displayName: Initialize Docker

              - script: |
                  set DOCKER_CONTEXT=%AZP_AGENT_DOCKER_WINDOWS%

                  docker-compose run chef-policy-test ${{ option.name }}
                displayName: Test

              - script: |
                  set DOCKER_CONTEXT=%AZP_AGENT_DOCKER_WINDOWS%

                  docker-compose down --rmi local --volumes
                displayName: Clean
                condition: always()
          # - job: test_${{ option.name }}_chocolatey
          #   displayName: Test ${{ option.name }} Chocolatey
          #   pool:
          #     vmImage: windows-2019
          #   workspace:
          #     clean: all
          #   steps:
          #     - checkout: self
          #       submodules: recursive
          #     - task: DownloadPipelineArtifact@2
          #       inputs:
          #         artifact: build-${{ option.name }}-chocolatey
          #         path: $(Build.SourcesDirectory)/.chocolatey/
          #       displayName: Download Artifacts
          #     - script: |
          #         set DOCKER_CONTEXT=%AZP_AGENT_DOCKER_WINDOWS%
          #         docker --version
          #         docker-compose --version
          #         docker container ls -a
          #         docker image ls -a
          #       displayName: Initialize Docker
          #     - script: |
          #         set DOCKER_CONTEXT=%AZP_AGENT_DOCKER_WINDOWS%
          #         docker-compose pull --quiet chef-client-windows
          #         docker-compose run --rm --entrypoint choco chef-client-windows install chef-policy --confirm --source ./.chocolatey/packages/
          #       displayName: Test
