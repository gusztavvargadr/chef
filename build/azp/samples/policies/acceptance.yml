parameters:
  options:
    []
    # - directory: directory-name
    #   policy: policy-name

stages:
  - stage: acceptance
    displayName: Acceptance

    jobs:
      - ${{ each option in parameters.options }}:
          - job: test_${{ option.directory }}_${{ option.policy }}_chef
            displayName: Test ${{ option.directory }} ${{ option.policy }} Chef

            pool:
              vmImage: windows-2019

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: build-${{ option.directory }}-${{ option.policy }}-chef
                  path: $(Build.SourcesDirectory)/.chef/
                displayName: Download Chef Artifacts

              - script: |
                  docker version
                  docker-compose version
                  docker container ls -a
                  docker image ls -a
                displayName: Initialize Docker

              - script: |
                  docker-compose run --workdir C:/opt/chef/.chef/policies/${{ option.directory }}/${{ option.policy }}/ chef-client-windows-ltsc2019 -z
                displayName: Run Docker

              - script: |
                  docker-compose down --rmi all
                displayName: Clean Docker
                condition: always()

          - job: test_${{ option.directory }}_${{ option.policy }}_chocolatey
            displayName: Test ${{ option.directory }} ${{ option.policy }} Chocolatey

            pool:
              vmImage: windows-2019

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: build-${{ option.directory }}-${{ option.policy }}-chocolatey
                  path: $(Build.SourcesDirectory)/.chocolatey/
                displayName: Download Chocolatey Artifacts

              - script: |
                  docker version
                  docker-compose version
                  docker container ls -a
                  docker image ls -a
                displayName: Initialize Docker

              - script: |
                  docker-compose run --entrypoint choco chef-client-windows-ltsc2019 install chef-policy --confirm --source ./.chocolatey/packages/
                displayName: Run Docker

              - script: |
                  docker-compose down --rmi all
                displayName: Clean Docker
                condition: always()
