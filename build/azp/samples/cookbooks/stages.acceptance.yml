parameters:
  configurations:
    []
    # - cookbook: cookbook
    #   driver: driver
    #   suites: [ 'suite1', 'suite2' ]

stages:
  - stage: acceptance
    displayName: Acceptance

    jobs:
      - ${{ each configuration in parameters.configurations }}:
          - ${{ each suite in configuration.suites }}:
              - job: test_${{ configuration.cookbook }}_${{ replace(suite, '-', '_') }}
                displayName: Test ${{ configuration.cookbook }} ${{ suite }}

                ${{ if eq(configuration.driver, 'vagrant') }}:
                  pool:
                    name: Default

                ${{ if eq(configuration.driver, 'docker') }}:
                  pool:
                    name: Default
                    demands:
                      - AZP_AGENT_DOCKER_WINDOWS

                workspace:
                  clean: all

                steps:
                  - checkout: self
                    submodules: recursive

                  - ${{ if eq(configuration.driver, 'vagrant') }}:
                      - script: |
                          vagrant --version
                          vagrant plugin list

                          vagrant box list
                          vagrant global-status
                        displayName: Initialize Vagrant

                  - ${{ if eq(configuration.driver, 'docker') }}:
                      - script: |
                          set DOCKER_CONTEXT=%AZP_AGENT_DOCKER_WINDOWS%

                          docker --version
                          docker-compose --version

                          docker image ls -a
                          docker container ls -a
                        displayName: Initialize Docker

                  - script: |
                      cd samples/cookbooks/${{ configuration.cookbook }}_test
                      kitchen test ${{ suite }}
                    env:
                      KITCHEN_YAML: kitchen.${{ configuration.driver }}.yml
                    displayName: Test

                  - script: |
                      cd samples/cookbooks/${{ configuration.cookbook }}_test
                      kitchen destroy ${{ suite }}
                    env:
                      KITCHEN_YAML: kitchen.${{ configuration.driver }}.yml
                    displayName: Clean
                    condition: always()
