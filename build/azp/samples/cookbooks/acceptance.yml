parameters:
  options: []
    # - cookbook: cookbook-name
    # - suite: suite-name

stages:
  - stage: acceptance
    displayName: Acceptance

    jobs:
      - ${{ each option in parameters.options }}:
        - job: test_${{ option.cookbook }}_${{ option.name }}
          displayName: Test ${{ option.cookbook }} with ${{ option.name }}

          pool:
            name: Default
            demands:
              - AZP_AGENT_CHEF

          workspace:
            clean: all

          steps:
            - checkout: self
              submodules: recursive

            - script: |
                chef --version
              displayName: Init

            - script: |
                cd ./samples/cookbooks/${{ option.cookbook }}_test
                kitchen create ${{ option.suite }}
              displayName: Restore

            - script: |
                cd ./samples/cookbooks/${{ option.cookbook }}_test
                kitchen converge ${{ option.suite }}
              displayName: Test 1 Converge

            - script: |
                cd ./samples/cookbooks/${{ option.cookbook }}_test
                kitchen verify ${{ option.suite }}
              displayName: Test 1 Verify

            - script: |
                cd ./samples/cookbooks/${{ option.cookbook }}_test
                kitchen converge ${{ option.suite }}
              displayName: Test 2 Converge

            - script: |
                cd ./samples/cookbooks/${{ option.cookbook }}_test
                kitchen verify ${{ option.suite }}
              displayName: Test 2 Verify

            - script: |
                cd ./samples/cookbooks/${{ option.cookbook }}_test
                kitchen destroy ${{ option.name }}
              displayName: Clean
              condition: always()
