parameters:
  configurations: []
    # - name: string
    #   platforms: [ string ]

stages:
  - stage: commit
    displayName: Commit

    jobs:
      - ${{ each configuration in parameters.configurations }}:
        - job: build_${{ replace(configuration.name, '-', '_') }}
          displayName: Build ${{ configuration.name }}

          pool:
            name: Default
            demands:
              - AZP_AGENT_WINDOWS
              - AZP_AGENT_DOCKER

          workspace:
            clean: all

          steps:
            - checkout: self
              submodules: recursive

            - script: |
                docker --version
                docker-compose --version

                docker container ls -a
                docker image ls -a
              displayName: Initialize Docker

            - script: |
                docker-compose pull --quiet chef-workstation-windows
              displayName: Restore

            - script: |
                docker-compose run chef-policy-build-windows ${{ configuration.name }}
              displayName: Build

            - publish: $(Build.SourcesDirectory)/artifacts/
              displayName: Publish Artifacts
              artifact: build-${{ configuration.name }}

            - script: |
                docker-compose down --rmi local --volumes
              displayName: Clean
              condition: always()

  - stage: acceptance
    displayName: Acceptance

    jobs:
      - ${{ each configuration in parameters.configurations }}:
        - ${{ each platform in configuration.platforms }}:
          - job: test_${{ replace(configuration.name, '-', '_') }}_${{ platform }}
            displayName: Test ${{ configuration.name }} on ${{ platform }}

            pool:
              name: Default
              demands:
                - AZP_AGENT_CHEF
                - AZP_AGENT_VAGRANT

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - task: DownloadPipelineArtifact@2
                displayName: Download Artifacts
                inputs:
                  artifact: build-${{ configuration.name }}
                  path: $(Build.SourcesDirectory)/artifacts/

              - script: |
                  vagrant --version
                  vagrant plugin list

                  vagrant box list
                  vagrant global-status
                displayName: Initialize Vagrant

              - script: |
                  cd samples/policies/${{ configuration.name }}
                  kitchen test default-${{ platform }}
                displayName: Test

              - script: |
                  cd samples/policies/${{ configuration.name }}
                  kitchen destroy default-${{ platform }}
                displayName: Clean
                condition: always()
