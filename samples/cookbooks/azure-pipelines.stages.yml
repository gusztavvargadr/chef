parameters:
  configurations: []
    # - name: string
    #   instances: [ string ]

stages:
  - stage: commit
    displayName: Commit

    jobs:
      - ${{ each configuration in parameters.configurations }}:
        - job: build_${{ replace(configuration.name, '-', '_') }}
          displayName: Build cookbook ${{ configuration.name }}

          pool:
            vmImage: ubuntu-22.04

          container: gusztavvargadr/chef-workstation:linux-ubuntu-22.04

          workspace:
            clean: all

          steps:
            - checkout: self
              submodules: recursive

            - script: |
                dotnet --info
                dotnet tool restore
              displayName: Init

            - script: |
                dotnet cake --configuration ${{ configuration.name }} --target commit
              displayName: Build

            - script: |
                dotnet cake --configuration ${{ configuration.name }} --target commit-clean
              displayName: Clean
              condition: always()

  - stage: acceptance
    displayName: Acceptance

    variables:
      - group: kitchen-ec2

    jobs:
      - ${{ each configuration in parameters.configurations }}:
        - ${{ each instance in configuration.instances }}:
          - job: test_${{ replace(configuration.name, '-', '_') }}_${{ replace(instance, '-', '_') }}
            displayName: Test cookbook ${{ configuration.name }} on instance ${{ instance }}

            pool:
              vmImage: ubuntu-22.04

            container: gusztavvargadr/chef-workstation:linux-ubuntu-22.04

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - script: |
                  dotnet --info
                  dotnet tool restore
                displayName: Init

              - script: |
                  dotnet cake --configuration ${{ configuration.name }}/${{ instance }}/ec2 --target acceptance
                displayName: Build
                env:
                  AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
                  AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)

              - script: |
                  dotnet cake --configuration ${{ configuration.name }}/${{ instance }}/ec2 --target acceptance-clean
                displayName: Clean
                env:
                  AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
                  AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
                condition: always()
